{"ast":null,"code":"import _defineProperty from \"/Users/novelistchan/Documents/Form-Antd-Test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport InputWidget from './InputWidget';\nimport InputNumberWidget from './InputNumberWidget';\nimport InputIntegerWidget from './InputIntegerWidget';\nlet widgets = {\n  \"input\": InputWidget,\n  \"inputNumber\": InputNumberWidget,\n  \"inputInteger\": InputIntegerWidget\n};\nexport function register(extensions) {\n  widgets = _objectSpread({}, widgets, {}, extensions.widgets);\n}\nexport function parser(type) {\n  return widgets[type] || null;\n}\nexport default {\n  register,\n  parser\n};","map":{"version":3,"sources":["/Users/novelistchan/Documents/Form-Antd-Test/src/components/form/components/widgets/index.js"],"names":["InputWidget","InputNumberWidget","InputIntegerWidget","widgets","register","extensions","parser","type"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,IAAIC,OAAO,GAAG;AACZ,WAASH,WADG;AAEZ,iBAAeC,iBAFH;AAGZ,kBAAgBC;AAHJ,CAAd;AAMA,OAAO,SAASE,QAAT,CAAkBC,UAAlB,EAA8B;AACnCF,EAAAA,OAAO,qBAAQA,OAAR,MAAoBE,UAAU,CAACF,OAA/B,CAAP;AACD;AAED,OAAO,SAASG,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAOJ,OAAO,CAACI,IAAD,CAAP,IAAiB,IAAxB;AACD;AAED,eAAe;AACbH,EAAAA,QADa;AAEbE,EAAAA;AAFa,CAAf","sourcesContent":["import InputWidget from './InputWidget'\nimport InputNumberWidget from './InputNumberWidget'\nimport InputIntegerWidget from './InputIntegerWidget'\nlet widgets = {\n  \"input\": InputWidget,\n  \"inputNumber\": InputNumberWidget,\n  \"inputInteger\": InputIntegerWidget\n}\n\nexport function register(extensions) {\n  widgets = { ...widgets, ...extensions.widgets }\n}\n\nexport function parser(type) {\n  return widgets[type] || null\n}\n\nexport default {\n  register,\n  parser\n}"]},"metadata":{},"sourceType":"module"}