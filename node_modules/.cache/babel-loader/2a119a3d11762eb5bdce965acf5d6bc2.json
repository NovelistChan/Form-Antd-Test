{"ast":null,"code":"import _defineProperty from \"/Users/novelistchan/Documents/koj/Form-Antd-Test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ObjectField from './ObjectField';\nimport ArrayField from './ArrayField';\nimport StringField from './StringField';\nimport UnsupportedField from './UnsupportedField';\nimport NumberField from './NumberField';\nimport IntegerField from './IntegerField';\nimport BooleanField from './BooleanField';\nimport ArrayTableField from './ArrayTableField';\nimport \"./index.css\";\nlet fields = {\n  \"object\": ObjectField,\n  \"string\": StringField,\n  \"array\": ArrayField,\n  \"number\": NumberField,\n  \"integer\": IntegerField,\n  \"boolean\": BooleanField,\n  \"arrayTable\": ArrayTableField\n};\nexport function register(extensions) {\n  fields = _objectSpread({}, fields, {}, extensions);\n}\nexport function parser(type) {\n  return fields[type] || UnsupportedField;\n}\nexport default {\n  register,\n  parser\n};","map":{"version":3,"sources":["/Users/novelistchan/Documents/koj/Form-Antd-Test/src/components/form/components/fields/index.js"],"names":["ObjectField","ArrayField","StringField","UnsupportedField","NumberField","IntegerField","BooleanField","ArrayTableField","fields","register","extensions","parser","type"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACC,OAAO,aAAP;AAED,IAAIC,MAAM,GAAG;AACX,YAAUR,WADC;AAEX,YAAUE,WAFC;AAGX,WAASD,UAHE;AAIX,YAAUG,WAJC;AAKX,aAAWC,YALA;AAMX,aAAWC,YANA;AAOX,gBAAcC;AAPH,CAAb;AAUA,OAAO,SAASE,QAAT,CAAkBC,UAAlB,EAA8B;AACnCF,EAAAA,MAAM,qBAAQA,MAAR,MAAmBE,UAAnB,CAAN;AACD;AAED,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAC3B,SAAOJ,MAAM,CAACI,IAAD,CAAN,IAAgBT,gBAAvB;AACD;AAED,eAAe;AACbM,EAAAA,QADa;AAEbE,EAAAA;AAFa,CAAf","sourcesContent":["import ObjectField from './ObjectField'\nimport ArrayField from './ArrayField'\nimport StringField from './StringField'\nimport UnsupportedField from './UnsupportedField'\nimport NumberField from './NumberField'\nimport IntegerField from './IntegerField'\nimport BooleanField from './BooleanField'\nimport ArrayTableField from './ArrayTableField'\n import \"./index.css\"\n\nlet fields = {\n  \"object\": ObjectField,\n  \"string\": StringField,\n  \"array\": ArrayField,\n  \"number\": NumberField,\n  \"integer\": IntegerField,\n  \"boolean\": BooleanField,\n  \"arrayTable\": ArrayTableField\n}\n\nexport function register(extensions) {\n  fields = { ...fields, ...extensions }\n}\n\nexport function parser(type) {\n  return fields[type] || UnsupportedField\n}\n\nexport default {\n  register,\n  parser\n}"]},"metadata":{},"sourceType":"module"}