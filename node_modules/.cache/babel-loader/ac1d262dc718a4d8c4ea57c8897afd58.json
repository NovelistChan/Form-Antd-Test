{"ast":null,"code":"import _defineProperty from \"/Users/novelistchan/Documents/koj/Form-Antd-Test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/novelistchan/Documents/koj/Form-Antd-Test/src/components/form/components/Group.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Form from './Form';\nimport utils from './utils';\nimport { Collapse } from 'antd';\nconst Panel = Collapse.Panel;\n\nclass Group extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: this.props.formData || this.props.schema.default || utils.default(this.props.schema.type)\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          schema = _this$props.schema,\n          onChange = _this$props.onChange;\n    const formData = this.state.formData;\n    let groups = {\n      \"default\": {\n        type: \"object\",\n        properties: {}\n      }\n    };\n    let datas = {\n      \"default\": {}\n    };\n    Object.keys(schema.properties).forEach(property => {\n      const group = schema.properties[property].group || \"default\";\n\n      if (!groups[group]) {\n        groups[group] = {\n          type: \"object\",\n          properties: {}\n        };\n        datas[group] = {};\n      }\n\n      groups[group].properties[property] = schema.properties[property];\n      datas[group][property] = formData[property];\n    });\n    return React.createElement(Collapse, {\n      defaultActiveKey: [\"default\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Object.keys(groups).map(group => React.createElement(Panel, {\n      key: group,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form, {\n      schema: groups[group],\n      formData: datas[group],\n      global: {},\n      onChange: data => this.setState({\n        formData: _objectSpread({}, this.state.formData, {}, data)\n      }, _ => onChange && onChange(this.state.formData)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["/Users/novelistchan/Documents/koj/Form-Antd-Test/src/components/form/components/Group.js"],"names":["React","Form","utils","Collapse","Panel","Group","Component","state","formData","props","schema","default","type","render","onChange","groups","properties","datas","Object","keys","forEach","property","group","map","data","setState","_"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;MAEQC,K,GAAUD,Q,CAAVC,K;;AAER,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAmClCC,KAnCkC,GAmC1B;AACNC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAX,IAAuB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAzC,IAAoDT,KAAK,CAACS,OAAN,CAAc,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,IAAhC;AADxD,KAnC0B;AAAA;;AAClCC,EAAAA,MAAM,GAAG;AAAA,wBAEsB,KAAKJ,KAF3B;AAAA,UAECC,MAFD,eAECA,MAFD;AAAA,UAESI,QAFT,eAESA,QAFT;AAAA,UAGCN,QAHD,GAGc,KAAKD,KAHnB,CAGCC,QAHD;AAKP,QAAIO,MAAM,GAAG;AAAE,iBAAW;AAAEH,QAAAA,IAAI,EAAE,QAAR;AAAkBI,QAAAA,UAAU,EAAE;AAA9B;AAAb,KAAb;AACA,QAAIC,KAAK,GAAG;AAAE,iBAAW;AAAb,KAAZ;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYT,MAAM,CAACM,UAAnB,EAA+BI,OAA/B,CAAuCC,QAAQ,IAAI;AACjD,YAAMC,KAAK,GAAGZ,MAAM,CAACM,UAAP,CAAkBK,QAAlB,EAA4BC,KAA5B,IAAqC,SAAnD;;AACA,UAAI,CAACP,MAAM,CAACO,KAAD,CAAX,EAAoB;AAClBP,QAAAA,MAAM,CAACO,KAAD,CAAN,GAAgB;AAAEV,UAAAA,IAAI,EAAE,QAAR;AAAkBI,UAAAA,UAAU,EAAE;AAA9B,SAAhB;AACAC,QAAAA,KAAK,CAACK,KAAD,CAAL,GAAe,EAAf;AACD;;AACDP,MAAAA,MAAM,CAACO,KAAD,CAAN,CAAcN,UAAd,CAAyBK,QAAzB,IAAqCX,MAAM,CAACM,UAAP,CAAkBK,QAAlB,CAArC;AACAJ,MAAAA,KAAK,CAACK,KAAD,CAAL,CAAaD,QAAb,IAAyBb,QAAQ,CAACa,QAAD,CAAjC;AACD,KARD;AAUA,WACE,oBAAC,QAAD;AAAU,MAAA,gBAAgB,EAAE,CAAC,SAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBQ,GAApB,CAAwBD,KAAK,IAC5B,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAEP,MAAM,CAACO,KAAD,CADhB;AAEE,MAAA,QAAQ,EAAEL,KAAK,CAACK,KAAD,CAFjB;AAGE,MAAA,MAAM,EAAE,EAHV;AAIE,MAAA,QAAQ,EAAEE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEjB,QAAAA,QAAQ,oBAAO,KAAKD,KAAL,CAAWC,QAAlB,MAA+BgB,IAA/B;AAAV,OAAd,EAAiEE,CAAC,IAAIZ,QAAQ,IAAIA,QAAQ,CAAC,KAAKP,KAAL,CAAWC,QAAZ,CAA1F,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF;AAcD;;AAjCiC;;AAwCpC,eAAeH,KAAf","sourcesContent":["import React from 'react'\nimport Form from './Form'\nimport utils from './utils'\nimport { Collapse } from 'antd'\n\nconst { Panel } = Collapse\n\nclass Group extends React.Component {\n  render() {\n\n    const { schema, onChange } = this.props\n    const { formData } = this.state\n\n    let groups = { \"default\": { type: \"object\", properties: {} } }\n    let datas = { \"default\": {} }\n\n    Object.keys(schema.properties).forEach(property => {\n      const group = schema.properties[property].group || \"default\"\n      if (!groups[group]) {\n        groups[group] = { type: \"object\", properties: {} }\n        datas[group] = {}\n      }\n      groups[group].properties[property] = schema.properties[property]\n      datas[group][property] = formData[property]\n    })\n\n    return (\n      <Collapse defaultActiveKey={[\"default\"]}>\n        {Object.keys(groups).map(group => (\n          <Panel key={group}>\n            <Form\n              schema={groups[group]}\n              formData={datas[group]}\n              global={{}}\n              onChange={data => this.setState({ formData: { ...this.state.formData, ...data } }, _ => onChange && onChange(this.state.formData))}\n            />\n          </Panel>\n        ))}\n      </Collapse>\n    )\n  }\n\n  state = {\n    formData: this.props.formData || this.props.schema.default || utils.default(this.props.schema.type)\n  }\n}\n\nexport default Group"]},"metadata":{},"sourceType":"module"}