{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/Form-Antd-Test/src/components/form/components/wrappers/Validator/index.js\";\nimport React from 'react'; //import \"./index.css\"\n\nexport default function (props) {\n  const formData = props.formData,\n        rules = props.rules;\n  let hints = [];\n  rules.forEach((rule, index) => {\n    const re = new RegExp(rule.regex);\n    if (typeof formData === \"string\" && !formData.match(re)) hints.push(React.createElement(\"div\", {\n      className: \"info\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, rule.info));\n  });\n  return React.createElement(\"div\", {\n    className: \"wrapper validator\",\n    error: hints.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.children, hints);\n}","map":{"version":3,"sources":["/Users/novelistchan/Documents/Form-Antd-Test/src/components/form/components/wrappers/Validator/index.js"],"names":["React","props","formData","rules","hints","forEach","rule","index","re","RegExp","regex","match","push","info","length","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,eAAe,UAAUC,KAAV,EAAiB;AAAA,QAEtBC,QAFsB,GAEFD,KAFE,CAEtBC,QAFsB;AAAA,QAEZC,KAFY,GAEFF,KAFE,CAEZE,KAFY;AAI9B,MAAIC,KAAK,GAAG,EAAZ;AAEAD,EAAAA,KAAK,CAACE,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWH,IAAI,CAACI,KAAhB,CAAX;AACA,QAAI,OAAOR,QAAP,KAAoB,QAApB,IAAgC,CAACA,QAAQ,CAACS,KAAT,CAAeH,EAAf,CAArC,EACEJ,KAAK,CAACQ,IAAN,CAAW;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEL,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,IAAI,CAACO,IAAxC,CAAX;AACH,GAJD;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAET,KAAK,CAACU,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,KAAK,CAACc,QADT,EAEGX,KAFH,CADF;AAMD","sourcesContent":["import React from 'react'\n//import \"./index.css\"\n\nexport default function (props) {\n\n  const { formData, rules } = props\n\n  let hints = []\n\n  rules.forEach((rule, index) => {\n    const re = new RegExp(rule.regex)\n    if (typeof formData === \"string\" && !formData.match(re))\n      hints.push(<div className=\"info\" key={index}>{rule.info}</div>)\n  })\n\n  return (\n    <div className=\"wrapper validator\" error={hints.length}>\n      {props.children}\n      {hints}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}